From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Simon Gardling <titaniumtown@gmail.com>
Date: Tue, 25 Jan 2022 11:21:34 -0500
Subject: [PATCH] randomTick blocks below y=0 and above y=255

Fixes an issue with Paper's "Optimise random block ticking" patch where the handling of world height in respect for IBlockDataList and picking a Y position wasn't updated to match 1.18. Resulting in only blocks between y levels 0-255 being randomTicked.

Original code by Titaniumtown, licensed under GNU General Public License v3.0
You can find the original code on https://gitlab.com/Titaniumtown/JettPack

diff --git a/src/main/java/com/destroystokyo/paper/util/maplist/IBlockDataList.java b/src/main/java/com/destroystokyo/paper/util/maplist/IBlockDataList.java
index 277cfd9d1e8fff5d9b5e534b75c3c5162d58b0b7..b1d7a34b6e05fcf1c681ebb160f69e447fe98621 100644
--- a/src/main/java/com/destroystokyo/paper/util/maplist/IBlockDataList.java
+++ b/src/main/java/com/destroystokyo/paper/util/maplist/IBlockDataList.java
@@ -26,7 +26,7 @@ public final class IBlockDataList {
     private int size;
 
     public static int getLocationKey(final int x, final int y, final int z) {
-        return (x & 15) | (((z & 15) << 4)) | ((y & 255) << (4 + 4));
+        return (x & 15) | ((z & 15) << 4) | ((y & 4095) << 8); // JettPack
     }
 
     public static BlockState getBlockDataFromRaw(final long raw) {
diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index e45e292c0efb0f95e9435a27357bfaa4fe23bf8e..cdf53ac784383f75b8bda881110632adb895a576 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -903,7 +903,7 @@ public class ServerLevel extends Level implements WorldGenLevel {
                     continue;
                 }
 
-                int yPos = (sectionIndex + minSection) << 4;
+                int yPos = ((sectionIndex + minSection) << 4) + 4096;
                 for (int a = 0; a < randomTickSpeed; ++a) {
                     int tickingBlocks = section.tickingList.size();
                     int index = this.randomTickRandom.nextInt(16 * 16 * 16);
@@ -914,7 +914,7 @@ public class ServerLevel extends Level implements WorldGenLevel {
                     long raw = section.tickingList.getRaw(index);
                     int location = com.destroystokyo.paper.util.maplist.IBlockDataList.getLocationFromRaw(raw);
                     int randomX = location & 15;
-                    int randomY = ((location >>> (4 + 4)) & 255) | yPos;
+                    int randomY = (((location >>> 8) & 4095) | yPos)-4096; // JettPack
                     int randomZ = (location >>> 4) & 15;
 
                     BlockPos blockposition2 = blockposition.set(j + randomX, randomY, k + randomZ);
diff --git a/src/main/java/net/minecraft/world/level/chunk/LevelChunkSection.java b/src/main/java/net/minecraft/world/level/chunk/LevelChunkSection.java
index 16874e3c7c8e2577f3661cb3a459c63ea061b2d8..c7247458d77324519f430bff0c9bdff701674dd0 100644
--- a/src/main/java/net/minecraft/world/level/chunk/LevelChunkSection.java
+++ b/src/main/java/net/minecraft/world/level/chunk/LevelChunkSection.java
@@ -191,7 +191,7 @@ public class LevelChunkSection {
             if (iblockdata1.isRandomlyTicking()) {
                 --this.tickingBlockCount;
                 // Paper start
-                this.tickingList.remove(x, y, z);
+                this.tickingList.remove(x, y+4096, z);
                 // Paper end
             }
         }
@@ -206,7 +206,7 @@ public class LevelChunkSection {
             if (state.isRandomlyTicking()) {
                 ++this.tickingBlockCount;
                 // Paper start
-                this.tickingList.add(x, y, z, state);
+                this.tickingList.add(x, y+4096, z, state);
                 // Paper end
             }
         }
